1. Adding a new language
From a terminal, change directory into the "po" directory, then run

msginit -l <language code>

where <language code> is the code for the language you are adding. You will
then get a new file called <language code>.po which you can edit with the
very nice "lokalize" program. This file will contain some hopefully helpful
context for each text so that you can understand where and how the text will
be displayed. After translating all or most of the strings, email the new .po
file to software maintainer for inclusion.

2. Updating a translation
If texts in the software has been changed, the .po files will have some entries
marked as "needs review" or "untranslated" in Lokalize. Check if they still
look good, change if needed or just approve them. Send updated .po file to software
maintainer.

3. Nice to know, for developers mostly.
The script called "extract-messages.sh" is designed to be run from the "po"
directory. It can be run at any time and should never cause any dataloss or
other problems. It extracts text strings that needs translation from the source
code and merges that with already existing translation files. Run it if the
source code has been changed with new or modified user-visible texts.

It also extracts texts from .desktop.template files that needs translation.
After that it spits out .desktop files by using those templates and
translations from all the *.po files in the po directory. So if you have
updated or added translations of the text strings from .desktop files, running
extract-messages.sh is needed to generate an updated .desktop file. That
generated .desktop file is kept in git for convenience.

